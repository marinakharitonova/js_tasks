// Шейкерная сортировка (Cocktail sort) - оптимизированный алгоритм пузырьковой сортировки. В основе опять лежит сравнение
// двух соседних элементов. Единственное отличие состоит лишь в том, что теперь это происходит в двух направлениях
// поочередно, постепенно сужая диапазон сортировки. В итоге за один проход в конец массива “всплывает” максимальный
// элемент из диапазона, а за следующий проход — в начало массива минимальный. Эти элементы можно больше не
// рассматривать и таким образом диапазон сужается с двух сторон.
// Сложность O(n^2)
// Оптимизация: заведем переменную optimum и будем запоминать позицию, на которой последний раз произошли изменения, и
// будем сдвигать указатель на эту позицию

const arr = [0, 3, 2, 5, 6, 8, 1, 9, 4, 2, 1, 2, 9, 6, 4, 1, 7, -1, -5, 23, 6, 2, 35, 6, 3, 32];
let count = 0;

const cocktailSort = arr => {
    let optimum = 0;
    let left = 0;
    let right = arr.length - 1;

    while (right > left) {
        for (let i = left; i < right; i++) {
            count++
            if (arr[i + 1] < arr[i]) {
                [arr[i], arr[i + 1]] = [arr[i + 1], arr[i]]
                optimum = i;
            }
        }
        right = optimum;

        for (let j = right; j > left; j--) {
            count++
            if (arr[j - 1] > arr[j]) {
                [arr[j], arr[j - 1]] = [arr[j - 1], arr[j]]
                optimum = j;
            }
        }
        left = optimum;
    }

    return arr;
}

console.log(cocktailSort(arr));
console.log(count);