// Сортировка пузырьком: сравниваем попарно стоящие элементы, и поднимаем наверх наименьший. Чтобы отсортировать таким
// образом весь массив длиной N, придется пройтись по нему N-1 раз (последний элемент уже будет отсортирован на
// предыдущей итерации, поэтому для него проход не требуется).
// Сложность O(n^2)
// заведем переменную wasSwap для каждой итерации цикла и будем присваивать ей true, если была перестановка,
// если нет - массив отсортирован

const arr = [0, 3, 2, 5, 6, 8, 1, 9, 4, 2, 1, 2, 9, 6, 4, 1, 7, -1, -5, 23, 6, 2, 35, 6, 3, 32];
let count = 0;

const bubbleSort = arr => {
    for (let i = 0; i < arr.length - 1; i++) {
        let wasSwap = false;
        for (let j = 0; j < arr.length - 1 - i; j++) {
            count++;
            if (arr[j + 1] < arr[j]) {
                let temp = arr[j + 1];
                arr[j + 1] = arr[j];
                arr[j] = temp;
                wasSwap = true;
            }
        }
        if (!wasSwap) break; //если не было перестановок - массив отсортирован, выходим из цикла
    }
    return arr
}

console.log(bubbleSort(arr));
console.log(count);